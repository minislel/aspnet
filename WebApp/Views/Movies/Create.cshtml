@model ModelMovie

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Movie</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="MovieId" class="control-label"></label>
                <input asp-for="MovieId" class="form-control" />
                <span asp-validation-for="MovieId" class="text-danger"></span>
            </div>
            <div>
                <label asp-for="CompanyId" class="control-label"></label>
                <select asp-for="CompanyId" asp-items="ViewBag.CompanyId" class="form-control"></select>
                <span asp-validation-for="CompanyId"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        const select = document.getElementById("CompanyId");
        const filter = document.getElementById("filter");
        filter.onchange = (e) => {
            fetch(`/api/companies?fragment=${filter.value}`)
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    }
                    throw "no Ok, actual status: " + response.status;
                })
                .then(companies => {
                    select.innerHTML = "";
                    for (let item of companies) {
                        const option = document.createElement("option");
                        option.setAttribute("value", item.companyId);
                        option.innertext = item.CompanyName;
                        select.appendChild(option);
                    })
                .catch(e => { console.error(e); });
    </script>
}
